worker_processes 1;
user root wheel;

error_log  /usr/local/var/log/nginx/error.log warn;
pid        /usr/local/var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /usr/local/etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Enable compression, this will help if you have for instance advaggâ€Ž module
    # by serving Gzip versions of the files.
    gzip_static on;

    port_in_redirect off;
    sendfile        on;
    keepalive_timeout  65;

    # Dynamic vhosts
    server {
        listen 80 default;
        server_name _;
        index  index.php index.html index.htm;
        listen 443 ssl;
        charset UTF-8;

        client_max_body_size 100M;

        # ssl on;
        ssl_certificate      /usr/local/etc/nginx/ssl/server.crt;
        ssl_certificate_key  /usr/local/etc/nginx/ssl/server.key;
        ssl_protocols        SSLv3 TLSv1;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        # dynamic vhosts for development
        set $basepath "/srv/www";

        set $domain $host;
        if ($domain ~ "^(.*)\.dev$") {
            set $domain $1;
        }

        set $rootpath "${domain}";

        if (-d $basepath/$domain/httpdocs) {
            set $rootpath "${domain}/httpdocs";
        }

        if (-d $basepath/$domain/app) {
            set $rootpath "${domain}/app";
        }

        if (-d $basepath/$domain/web) {
            set $rootpath "${domain}/web";
        }

        if (-d $basepath/$domain/webroot) {
            set $rootpath "${domain}/webroot";
        }

        if (-d $basepath/$domain/docroot) {
            set $rootpath "${domain}/docroot";
        }

        if (-f $basepath/$domain/index.php) {
            set $rootpath $domain;
        }

        if (-f $basepath/$domain/index.html) {
            set $rootpath $domain;
        }

        root $basepath/$rootpath;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location ~ \.php$ {
            fastcgi_read_timeout 600;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_param HTTPS off;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass 127.0.0.1:9001;
            fastcgi_intercept_errors on;
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # Symfony stuff.
        location ~ ^/(app|app_dev|config)\.php(/|$) {
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param HTTPS off;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass   127.0.0.1:9001;
        }

        location / {
            try_files $uri $uri/ @rewrite;
        }

        location ~ \..*/.*\.php$ {
            return 403;
        }

        location @indexphp {
            rewrite ^(.*)$ /index.php?q=$1;
        }

        location @rewrite {
            rewrite ^/(.*)$ /index.php?q=$1;
        }

        # Fighting with ImageCache? This little gem is amazing.
        location ~ ^/sites/.*/files/styles/ {
            try_files $uri $uri/ @rewrite;
        }

        # block .ht* access
        location ~ /\.ht {
            deny all;
        }
    }
}
